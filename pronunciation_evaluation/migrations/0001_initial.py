# Generated by Django 5.2.3 on 2025-06-22 09:10

import django.core.validators
import django.db.models.deletion
import pronunciation_evaluation.models
import pronunciation_evaluation.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EvaluationResult',
            fields=[
                ('id', models.CharField(default=pronunciation_evaluation.utils.generate_id, editable=False, primary_key=True, serialize=False)),
                ('clarity_score', models.FloatField(help_text="The clarity score of the user's pronunciation.")),
                ('date_added', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Evaluation',
            fields=[
                ('id', models.CharField(default=pronunciation_evaluation.utils.generate_id, editable=False, primary_key=True, serialize=False)),
                ('reference_text', models.TextField(default='', help_text='The reference text for the pronunciation evaluation.')),
                ('reference_audio', models.FileField(blank=True, help_text='Audio file of the reference text for pronunciation evaluation.', null=True, upload_to=pronunciation_evaluation.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mpga', 'mpeg', 'mpg', 'mpe', 'wav', 'aac', 'flac', 'm4a'], message='Only mp3, wav, aac, flac or mpeg file types are allowed.')])),
                ('user_audio', models.FileField(blank=True, help_text="Audio file of the user's pronunciation attempt.", null=True, upload_to=pronunciation_evaluation.models.get_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp3', 'mpga', 'mpeg', 'mpg', 'mpe', 'wav', 'aac', 'flac', 'm4a'], message='Only mp3, wav, aac, flac or mpeg file types are allowed.')])),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='evaluations', to=settings.AUTH_USER_MODEL)),
                ('result', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='evaluation', to='pronunciation_evaluation.evaluationresult')),
            ],
        ),
        migrations.CreateModel(
            name='FlowResult',
            fields=[
                ('id', models.CharField(default=pronunciation_evaluation.utils.generate_id, editable=False, primary_key=True, serialize=False)),
                ('speaking_ratio', models.FloatField(help_text='The ratio of speaking time to total time in the audio recording.')),
                ('speaking_speed', models.FloatField(help_text='The speaking speed in words per minute.')),
                ('flow_score', models.FloatField(help_text='The overall flow score based on speaking speed and continuity.')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='flow_results', to='pronunciation_evaluation.evaluation')),
            ],
        ),
        migrations.AddField(
            model_name='evaluationresult',
            name='reference_flow_result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reference_result', to='pronunciation_evaluation.flowresult'),
        ),
        migrations.AddField(
            model_name='evaluationresult',
            name='user_flow_result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='user_result', to='pronunciation_evaluation.flowresult'),
        ),
        migrations.CreateModel(
            name='PronunciationResult',
            fields=[
                ('id', models.CharField(default=pronunciation_evaluation.utils.generate_id, editable=False, primary_key=True, serialize=False)),
                ('score', models.FloatField(help_text='The pronunciation score based on phonetic analysis.')),
                ('percentage', models.FloatField(help_text='The percentage of correct pronunciation compared to the reference.')),
                ('user_phonemes', models.CharField(help_text="The phonemes detected in the user's pronunciation.")),
                ('reference_phonemes', models.CharField(help_text='The phonemes present in the reference pronunciation.')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('evaluation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pronunciation_results', to='pronunciation_evaluation.evaluation')),
            ],
        ),
        migrations.AddField(
            model_name='evaluationresult',
            name='pronunciation_result',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='result', to='pronunciation_evaluation.pronunciationresult'),
        ),
    ]
